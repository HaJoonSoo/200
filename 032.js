// ES6의 향상된 객체문법 알아보기 - 비구조화할당
// 비구조화 할당이란, 배열이나 객체의 값을 새로운 변수에 쉽게 할당한다.
// ES6 이전에는 변수 하나에 값 하나를 하나하나 할당해야했으나 ES6부터는 비구조화 할당을 통해 쉽게 할당가능

var obj = {a: 1, b: 2, c: 30, d:44, e: 5};

var{a, c}=obj;
console.log(`a >>> ${a}`);
console.log(`c >>> ${c}`);

var {a:newA=10, f:newF=5} = obj;
console.log(`newA >>> ${newA}`);
console.log(`newF >>> ${newF}`);

// 객체 obj에는 a,b,c,d,e 속성이 정의되어 있다.
// 여기서 비구조화를 통해 속성 a와 c속성 값을 가져와 변수에 할당한다.
// 중괄호 안에 원하는 속성명을 넣으면, obj 객체를 비구조화하여 해당 속성명에 따른 값을 각 변수에 할당한다.

// 기존 속성명의 값을 가져와서 새로운 변수명으로 할당하여 정의할 수 있다.
// 구분자를 :를 사이에 두고 왼쪽에 객체의 속성명을 오른쪽에는 새로운 변수명을 넣으면 된다.
//      ㄴ> 또한 기본값을 설정할 수 있다.
// 예를 들어 7라인에서 a:newA=10은 객체의 a속성값을 새로운 변수  newA로 다시 할당하되, undifined로 값이 없는
//경우에는 기본값 10을 할당한다는 의미이다.
// 따라서 f속성은 없는 속성이기 떄문에 newF 변수에는 가본값 숫자 5가 할당된다.

