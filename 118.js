// 정규표현식으로 대응되는 문자열 위치 확인하기 (search)

// 정규표현식이란 특정 규칙을 가진 문자열의 집합을 의미한다.
// 간단하게 regexp 또는 regex라고 부르는데, 특수문자 / 와 / 를 사이에 두는 표현식을 통해 일치하는 문자열을 찾거나 반환하고 일괄 치환하기도 한다.

// 자바스크립트에서 정규표현식을 활용하는데에는 두가지 방법이 있다.
// 첫 번째로 String 객체의 메소드 중에서 매개변수로 정규표현식을 대입하는 메소드를 사용한다.
// 두 번재로 자바스크립트는 정규표현식 자체를 RegEx 객체로 해석하여, RegEx 객체의 내장 메소드를 활용한다

// 이번 장에서는 String 객체의 메소드를 활용하여 정규표현식을 통해 문자열 처리하는 방법을 살펴보겠다
// String 객체의 search 메소드는 정규표현식을 매개변수로 대입하여, 문자열 앞에서부터 일치하는 첫 번째 값의 인덱스 위치를 반환한다.
// 만일 일치하는 값이 없으면 -1을 반환한다

const str = 'To lose tour path is the way to find that path';

const regex1 = /path/;
const regex2 = /q/;
const regex3 = /t/g;
const regex4 = /t/ig;

console.log(str.search(regex1));
console.log(str.search(regex2));
console.log(str.search(regex3));
console.log(str.search(regex4));

// 정규표현식은 특수기호 /를 양쪽에 두고, 그 안에 원하는 문자열의 패턴 또는 문자를 넣는다
// path 문자를 찾는 /path/를 변수 regex1에 대입한다

// 변수 regex2에 소문자 q를 찾는 정규표현식 /q/을 대입한다.

// 특수기호 /가 끝나는 끝나는 지점에 g플래그를 추가한다.
// G 플래그를 추가하면 정규표현식은 대상 문자열을 전체에서 일치하는 모든 문자를 찾는다
// 따라서 /t/g는 소문자 t를 가리킨다.

// i플래그를 추가하면 대소문자 구별없이 문자열을 찾는다.
// 따라서 /t/ig 정규표현식은 T또는 t 문자를 찾는 표현식이다.

// 문자열 str에서 search 메소드를 호출하고, 정규표현식 regex1을 대입하여 path문자를 찾는다
// str문자열에서 인덱스 13번째에 해당 문자가 위치하고 있기 때문에 숫자 13을 반환한다.

// str문자열에서 search메소드를 호출하고, 정규표현식 regex1을 대입하여 path문자를 찾는다.
// str문자열에서 인덱스 13번째에 해당 문자가 위치하고 있기 때문에 숫자 13을 반환한다

// str문자열에서 소문자 q를 찾을 수 없기 떄문에 숫자 -1이 콘솔로 출력된다

// str 문자열 전역에서 소문자 t를 찾는 표현식을 대입한다.
// 그러나 search 메소드 특성 상 일치한 문자들 중에서 가장 첫번째 값만 찾기 때문에 숫자 15를 반환한다

// str 전체 문자열에서 대소문자 구분없이 T또는 t문자와 일치하는 값의 인덱스를 반환한다.
// 일치하는 첫번째 인덱스는 문자열의 가장 첫 번째 문자 "T"이다.
// 따라서 숫자 0이 반환된다.