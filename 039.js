// 스코프 이해하기

// 소코프는 유효범위로서 변수와 매개변수가 어디까지 유효한지를 나타낸다
// 예를 들어 코드에서 a라고 작성했었을 때, a라는 식별자가 어디를 참조할지, 실제 값이 무엇인지 찾을때 스코프를 쓴다

var a = 100;
console.log(a);

function print() {
    var b = 20;
    if(true){
        var c = 30;
    }
    console.log(c);
}

print();
console.log(b);

// 변수를 a 전역으로 선언하고 10을 대입한다

// a에 해당하는 값을 찾아 콘솔에 출력한다. 이때 전역 스코프에서 a 식별자에 연결된 10을 찾아서 출력한다

// print라는 이름으로 함수를 선언한다

// 함수 내부에 변수 b를 선언하고 20을 대입한다

// if문 안의 블록에서 변수 c를 선언하고 블록 밖에서 c를 출력한다.
// 변수 c는 if문안의 블록에서 선언되었지만 var키워드로 선언한 변수들은 모두 함수 스코프에 정의된다
// 그래서 print 함수 내 어디에서든 변수 c에 접근할 수 있다.

// print함수에서 선언한 변수 b에 접근하려한다
// 함수 스코프에 정의된 변수 b는 해당 함수 내에서만 접근이 가능하기 때문에 함수 밖에서는 접근할 수 없고,
// 전역에도 b라는 이름으로 정의된 것이 없기 때문에 에러가 발생한다.

// 스코프는 일반적으로 렉시컬 스코프와 다이나믹 스코프로 분류된다.
// 렉시컬 스코프는 코드를 작성하는 시점에 스코프가 결정되어진다고 해서 정적 스코프라고 부른다
// 자바 스크립트는 대표적인 렉시컬 스코프이다.