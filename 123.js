// 반복 가능한 객체와 반복자 이해하기

// 자바스크립트에서는 반복 동작에 대한 규약으로 반복가능한과 반복자를 정의한다
// 다음의 반복 가능한 규약과 반복자 규약을 이해하고 각 예제를 통해 자세히 알아보겠다

// The Iterable Protocol (반복 가능한 규약) : 반복 가능한 규약은 객체 안의 값들을 반복할 수 있도록, 반복 동작을 정의하는 것을 허용한다
// 즉, 반복 동작에 대한 정의란 for-loop처럼 단순 반복 작업이기도하며, 이와 다르게 어떻게 반복하고, 반복하면서 어떤 동작을 수행하는지 직접 정의하는것도 해당된다
// 우선 객체가 반복 가능하려면, 객체 내부에 @@iterator 메소드를 구현해야한다.
// 구현할 때 속성키 (key)는 반드시 symbol.iterator 이어야하고, 속성값 (value)는 매개변수가 없는 함수가 대입된다
// 그리고 이 함수는 반복자 규약을 따르는 객체를 반환한다.

// The Iterator Protoal(반복자 규약) : 반복자 규약은 연속된 값을 만드는 방법을 정의한다
// 객체가 반복자 규약을 충족하려면, next 메소드를 가지고 있어야한다.
// 이때 객체 속성 키는 next이고, 속성값 (value)은 매개변수가 없는 함수로 정의한다
// 여기서 함수는 value와 done 속성을 가진 객체를 반환한다.
// 따라서 반복자의 next 메소드를 호출하면, 속성 키 이름이 value와 done인 객체가 반환된다
// 이러한 반복자 규약을 충족하는 객체를 iterator라고 한다.

